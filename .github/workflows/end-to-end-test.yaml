name: end-to-end-test
on:
  pull_request_target:
    types: [ labeled ] 
  workflow_dispatch:

env:
  chartuser: ${{ secrets.DEV_CHARTS_USERNAME }}
  chartpassword: ${{ secrets.DEV_CHARTS_PASSWORD }}
  ENFORCE_CRITICAL_CHECK: ${{ secrets.ENFORCE_CRITICAL_CHECK }}

jobs:
  end-to-end:
    if: ${{ github.event.label.name == 'ready-to-test' }}
    runs-on: ubuntu-20.04
    steps:
    - name: checkout the repo
      uses: actions/checkout@v3
      with:
        ref: ${{ github.event.pull_request.head.sha }}
   
    - name: Set outputs
      id: vars
      run: echo "::set-output name=sha_commit::$(git rev-parse HEAD)"  
     
    - name: Get branch name
      id: branch-name
      uses: tj-actions/branch-names@v6
      
    - name: build the worker operator
      uses: docker/build-push-action@v2
      with:
        tags: worker-operator:${{ steps.vars.outputs.sha_commit }}
        build-args: |
          PLATFORM=amd64
        push: false
        
    - name: Scanning image for vulnerablilities
      uses: aquasecurity/trivy-action@master
      with:
          image-ref: worker-operator:${{ steps.vars.outputs.sha_commit }}
          format: 'table'
          output: 'scan.txt'

    - name: check files
      run: |
        ls -ltr
        cat scan.txt

    - name: extract lines for base and binary image
      run: |
        bash .github/workflows/scripts/line-extractor.sh

    - name: check file is created or not
      run: |
        ls -ltr
        echo "base image file content:"
        cat final.txt
        echo "binary image file content:"
        cat binary.txt

    - name: break the bulid if critical vulunerablitites in base image
      if: env.ENFORCE_CRITICAL_CHECK == 'true'
      run: |
        bash .github/workflows/scripts/base-image-critical.sh

    - name: break the bulid if critical vulunerablitites in binary image
      if: env.ENFORCE_CRITICAL_CHECK == 'true'
      run: |
        bash .github/workflows/scripts/binary-image-critical.sh

    - name: Upload artifact
      uses: actions/upload-artifact@v3
      with:
          name: trivy-scan
          path: scan.txt
    
    - name: build kind clusters
      run: |
        mkdir -p ${{ github.workspace }}/profile
        bash .github/workflows/scripts/start-kind.sh
      env: 
         GITHUB_HEAD_COMMIT: ${{ steps.vars.outputs.sha_commit }}

    - name: Docker Run Action
      uses: addnab/docker-run-action@v3
      with:
        image: aveshadev/kubeslice-e2e:latest
        options: -v ${{ github.workspace }}/reports:/e2e/reports -v /home/runner/.kube:/e2e/assets/kubeconfig -v ${{ github.workspace }}/profile:/e2e/profile --network kind
        run: |
          bash run.sh kind

    - name: Checkout gh-pages repo
      uses: actions/checkout@v2
      with:
        repository: kubeslice/e2e-allure-reports
        path: gh-pages
        ref: 'gh-pages'
    
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"

    - name: Allure Report with history
      uses: PavanMudigonda/allure-html-reporter-github-pages@v1.0
      id: Allure_report_with_history
      with:
        allure_results: reports
        allure_report: allure_report
        allure_history: allure-history
        gh_pages: gh-pages
        keep_reports: 500
        github_run_id: '${{ github.run_id }}'
        github_run_num: 'Kind-${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.base_ref }}-${{ github.run_number }}'
        report_url: 'https://kubeslice.github.io/e2e-allure-reports/'
        test_env: Kind
          
    - name: Deploy report to Github Pages
      uses: peaceiris/actions-gh-pages@v2
      env:
        PUBLISH_BRANCH: gh-pages
        PERSONAL_TOKEN: ${{ secrets.TOKEN }}
        EXTERNAL_REPOSITORY: kubeslice/e2e-allure-reports
        PUBLISH_DIR: allure-history
        keep_files: true

    - name: wait for report deploy on site ( you can check report here also )
      run: |
         sleep 200
         echo 'https://kubeslice.github.io/e2e-allure-reports/Kind-${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.base_ref }}-${{ github.run_number }}/index.html'
      
    - name: Report link on Pull Request comment
      if: ${{ github.event_name == 'pull_request_target' }}
      uses: thollander/actions-comment-pull-request@v1
      with:
        message: |
                 report link  'https://kubeslice.github.io/e2e-allure-reports/Kind-${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.base_ref }}-${{ github.run_number }}/index.html'
        GITHUB_TOKEN: ${{ secrets.TOKEN }}
    
    - name: get email
      id: test
      uses: evvanErb/get-github-email-by-username-action@v1.25
      with:
          github-username: ${{github.actor}}
          token: ${{ secrets.TOKEN }}

   
    - name: Run Quality Gate Check
      uses: ./quality-gate
      with:
         ENABLE_QUALITY_GATE: true
         MINIMUM_PASS_PERCENTAGE: 75 
         ALLURE_BEHAVIORS_CSV: '/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/allure-history/Kind-${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.base_ref }}-${{ github.run_number }}/data/behaviors.csv'
    
    - name: Send mail
      if: always()
      uses: dawidd6/action-send-mail@v3
      with:
       server_address: smtp.gmail.com
       server_port: 465
       username: ${{secrets.MAIL_USERNAME}}
       password: ${{secrets.MAIL_PASSWORD}}
       cc: rajendra@aveshasystems.com, eric@aveshasystems.com, abhisek@aveshasystems.com
       subject: Worker-Operator | end-to-end-test | ${{ steps.date.outputs.date }}
       to: richie@aveshasystems.com, nishant.singh@aveshasystems.com
       from: no-reply@aveshasystems.com
       attachments: result-summary.txt
       body: Pipeline for the repo ${{github.repository}} is triggered by ${{github.actor}} from the branch ${{ steps.branch-name.outputs.current_branch }} !
             Run id for the pipeline is ${{ github.run_id }} .
             Check your logs in github action here https://github.com/kubeslice/worker-operator/actions/runs/${{ github.run_id }} .
             for downloading the logs zip file in your local use this API url in curl command https://api.github.com/repos/kubeslice/worker-operator/actions/runs/${{ github.run_id }}/logs
             the report url is https://kubeslice.github.io/e2e-allure-reports/Kind-${{ github.event.repository.name }}-${{ steps.date.outputs.date }}-${{ github.base_ref }}-${{ github.run_number }}/index.html. 
             for looking all the allure reports (including old ones ) please visit at https://kubeslice.github.io/e2e-allure-reports/ .
             please look result-summary.txt file for more info regarding test cases ( please note you will get result-summary.txt file only if your quality gate check steps ran successfully ).
