package events

// Autogenerated file. DO NOT MODIFY DIRECTLY!
/*
 *  Copyright (c) 2022 Avesha, Inc. All rights reserved.
 *
 *  SPDX-License-Identifier: Apache-2.0
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

import "github.com/kubeslice/kubeslice-monitoring/pkg/events"

var EventsMap = map[events.EventName]*events.EventSchema{
	"NetPolViolation": {
		Name:                "NetPolViolation",
		Reason:              "PolicyViolation",
		Action:              "PolicyMonitoring",
		Type:                events.EventTypeWarning,
		ReportingController: "worker",
		Message:             "Network policy violation - please ask admin to check the network policy configuration on the worker cluster. <link to tech doc event-list>",
	},
	"ClusterUnhealthy": {
		Name:                "ClusterUnhealthy",
		Reason:              "ComponentStatusChange",
		Action:              "CheckComponents",
		Type:                events.EventTypeWarning,
		ReportingController: "worker",
		Message:             "Cluster is unhealthy - Please check if all worker components are running as expected",
	},
	"ClusterHealthy": {
		Name:                "ClusterHealthy",
		Reason:              "ComponentStatusChange",
		Action:              "None",
		Type:                events.EventTypeNormal,
		ReportingController: "worker",
		Message:             "Cluster is healthy - Cluster is back to healthy state",
	},
	"ClusterNodeIpAutoDetected": {
		Name:                "ClusterNodeIpAutoDetected",
		Reason:              "ClusterNodeIpAutoDetected",
		Action:              "None",
		Type:                events.EventTypeNormal,
		ReportingController: "worker",
		Message:             "Auto-detection of cluster node IP addresses was successful due to changes detected in the worker nodes",
	},
	"ClusterNodeIpAutoDetectionFailed": {
		Name:                "ClusterNodeIpAutoDetectionFailed",
		Reason:              "ClusterNodeIpAutoDetectionFailed",
		Action:              "None",
		Type:                events.EventTypeWarning,
		ReportingController: "worker",
		Message:             "Auto-detection of cluster node IP addresses failed",
	},
}

var (
	EventNetPolViolation                  events.EventName = "NetPolViolation"
	EventClusterUnhealthy                 events.EventName = "ClusterUnhealthy"
	EventClusterHealthy                   events.EventName = "ClusterHealthy"
	EventClusterNodeIpAutoDetected        events.EventName = "ClusterNodeIpAutoDetected"
	EventClusterNodeIpAutoDetectionFailed events.EventName = "ClusterNodeIpAutoDetectionFailed"
)
