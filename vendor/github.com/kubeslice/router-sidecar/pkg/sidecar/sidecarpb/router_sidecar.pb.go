// Code generated by protoc-gen-go. DO NOT EDIT.
// source: router_sidecar.proto

package sidecar

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_ "github.com/golang/protobuf/ptypes/empty"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

// slice gateway-host-type
type SliceGwHostType int32

const (
	SliceGwHostType_SLICE_GW_SERVER SliceGwHostType = 0
	SliceGwHostType_SLICE_GW_CLIENT SliceGwHostType = 1
)

var SliceGwHostType_name = map[int32]string{
	0: "SLICE_GW_SERVER",
	1: "SLICE_GW_CLIENT",
}

var SliceGwHostType_value = map[string]int32{
	"SLICE_GW_SERVER": 0,
	"SLICE_GW_CLIENT": 1,
}

func (x SliceGwHostType) String() string {
	return proto.EnumName(SliceGwHostType_name, int32(x))
}

func (SliceGwHostType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_61b3a38b795a40d5, []int{0}
}

// SidecarResponse represents the Sidecar response format.
type SidecarResponse struct {
	StatusMsg            string   `protobuf:"bytes,1,opt,name=statusMsg,proto3" json:"statusMsg,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SidecarResponse) Reset()         { *m = SidecarResponse{} }
func (m *SidecarResponse) String() string { return proto.CompactTextString(m) }
func (*SidecarResponse) ProtoMessage()    {}
func (*SidecarResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b3a38b795a40d5, []int{0}
}

func (m *SidecarResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SidecarResponse.Unmarshal(m, b)
}
func (m *SidecarResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SidecarResponse.Marshal(b, m, deterministic)
}
func (m *SidecarResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SidecarResponse.Merge(m, src)
}
func (m *SidecarResponse) XXX_Size() int {
	return xxx_messageInfo_SidecarResponse.Size(m)
}
func (m *SidecarResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SidecarResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SidecarResponse proto.InternalMessageInfo

func (m *SidecarResponse) GetStatusMsg() string {
	if m != nil {
		return m.StatusMsg
	}
	return ""
}

// SliceGwConContext - Slice GW connection information
type SliceGwConContext struct {
	// Slice-Id
	SliceId string `protobuf:"bytes,1,opt,name=sliceId,proto3" json:"sliceId,omitempty"`
	// Local slice-gw ID
	LocalSliceGwId string `protobuf:"bytes,2,opt,name=localSliceGwId,proto3" json:"localSliceGwId,omitempty"`
	// Local slice-gw VPN IP
	LocalSliceGwVpnIP string `protobuf:"bytes,3,opt,name=localSliceGwVpnIP,proto3" json:"localSliceGwVpnIP,omitempty"`
	// Local Slice-gw-host-type  -  client/server
	LocalSliceGwHostType SliceGwHostType `protobuf:"varint,4,opt,name=localSliceGwHostType,proto3,enum=router.SliceGwHostType" json:"localSliceGwHostType,omitempty"`
	// Local slice-gw NSM Subnet
	LocalSliceGwNsmSubnet string `protobuf:"bytes,5,opt,name=localSliceGwNsmSubnet,proto3" json:"localSliceGwNsmSubnet,omitempty"`
	// Remote slice-gw NSM subnet
	RemoteSliceGwNsmSubnet string `protobuf:"bytes,6,opt,name=remoteSliceGwNsmSubnet,proto3" json:"remoteSliceGwNsmSubnet,omitempty"`
	// Local NSM gw peer IP
	LocalNsmGwPeerIP string `protobuf:"bytes,7,opt,name=localNsmGwPeerIP,proto3" json:"localNsmGwPeerIP,omitempty"`
	// Local NSM gw peer IPs
	LocalNsmGwPeerIPList []string `protobuf:"bytes,8,rep,name=localNsmGwPeerIPList,proto3" json:"localNsmGwPeerIPList,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SliceGwConContext) Reset()         { *m = SliceGwConContext{} }
func (m *SliceGwConContext) String() string { return proto.CompactTextString(m) }
func (*SliceGwConContext) ProtoMessage()    {}
func (*SliceGwConContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b3a38b795a40d5, []int{1}
}

func (m *SliceGwConContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SliceGwConContext.Unmarshal(m, b)
}
func (m *SliceGwConContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SliceGwConContext.Marshal(b, m, deterministic)
}
func (m *SliceGwConContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SliceGwConContext.Merge(m, src)
}
func (m *SliceGwConContext) XXX_Size() int {
	return xxx_messageInfo_SliceGwConContext.Size(m)
}
func (m *SliceGwConContext) XXX_DiscardUnknown() {
	xxx_messageInfo_SliceGwConContext.DiscardUnknown(m)
}

var xxx_messageInfo_SliceGwConContext proto.InternalMessageInfo

func (m *SliceGwConContext) GetSliceId() string {
	if m != nil {
		return m.SliceId
	}
	return ""
}

func (m *SliceGwConContext) GetLocalSliceGwId() string {
	if m != nil {
		return m.LocalSliceGwId
	}
	return ""
}

func (m *SliceGwConContext) GetLocalSliceGwVpnIP() string {
	if m != nil {
		return m.LocalSliceGwVpnIP
	}
	return ""
}

func (m *SliceGwConContext) GetLocalSliceGwHostType() SliceGwHostType {
	if m != nil {
		return m.LocalSliceGwHostType
	}
	return SliceGwHostType_SLICE_GW_SERVER
}

func (m *SliceGwConContext) GetLocalSliceGwNsmSubnet() string {
	if m != nil {
		return m.LocalSliceGwNsmSubnet
	}
	return ""
}

func (m *SliceGwConContext) GetRemoteSliceGwNsmSubnet() string {
	if m != nil {
		return m.RemoteSliceGwNsmSubnet
	}
	return ""
}

func (m *SliceGwConContext) GetLocalNsmGwPeerIP() string {
	if m != nil {
		return m.LocalNsmGwPeerIP
	}
	return ""
}

func (m *SliceGwConContext) GetLocalNsmGwPeerIPList() []string {
	if m != nil {
		return m.LocalNsmGwPeerIPList
	}
	return nil
}

type EcmpUpdateInfo struct {
	// Remote slice-gw NSM subnet
	RemoteSliceGwNsmSubnet string `protobuf:"bytes,1,opt,name=remoteSliceGwNsmSubnet,proto3" json:"remoteSliceGwNsmSubnet,omitempty"`
	// Local NSM ip to remove
	NsmIPToRemove        string   `protobuf:"bytes,8,opt,name=nsmIPToRemove,proto3" json:"nsmIPToRemove,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EcmpUpdateInfo) Reset()         { *m = EcmpUpdateInfo{} }
func (m *EcmpUpdateInfo) String() string { return proto.CompactTextString(m) }
func (*EcmpUpdateInfo) ProtoMessage()    {}
func (*EcmpUpdateInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b3a38b795a40d5, []int{2}
}

func (m *EcmpUpdateInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EcmpUpdateInfo.Unmarshal(m, b)
}
func (m *EcmpUpdateInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EcmpUpdateInfo.Marshal(b, m, deterministic)
}
func (m *EcmpUpdateInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EcmpUpdateInfo.Merge(m, src)
}
func (m *EcmpUpdateInfo) XXX_Size() int {
	return xxx_messageInfo_EcmpUpdateInfo.Size(m)
}
func (m *EcmpUpdateInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_EcmpUpdateInfo.DiscardUnknown(m)
}

var xxx_messageInfo_EcmpUpdateInfo proto.InternalMessageInfo

func (m *EcmpUpdateInfo) GetRemoteSliceGwNsmSubnet() string {
	if m != nil {
		return m.RemoteSliceGwNsmSubnet
	}
	return ""
}

func (m *EcmpUpdateInfo) GetNsmIPToRemove() string {
	if m != nil {
		return m.NsmIPToRemove
	}
	return ""
}

// ConnectionInfo - Slice Router client connection information
type ConnectionInfo struct {
	// Pod Name of the client
	PodName string `protobuf:"bytes,1,opt,name=podName,proto3" json:"podName,omitempty"`
	// Name of the nsm interface created after successful connection
	NsmInterface string `protobuf:"bytes,2,opt,name=nsmInterface,proto3" json:"nsmInterface,omitempty"`
	// IP address on the nsm interface on the client
	NsmIP string `protobuf:"bytes,3,opt,name=nsmIP,proto3" json:"nsmIP,omitempty"`
	// IP address on the nsm interface on the slice router
	NsmPeerIP            string   `protobuf:"bytes,4,opt,name=nsmPeerIP,proto3" json:"nsmPeerIP,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ConnectionInfo) Reset()         { *m = ConnectionInfo{} }
func (m *ConnectionInfo) String() string { return proto.CompactTextString(m) }
func (*ConnectionInfo) ProtoMessage()    {}
func (*ConnectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b3a38b795a40d5, []int{3}
}

func (m *ConnectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ConnectionInfo.Unmarshal(m, b)
}
func (m *ConnectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ConnectionInfo.Marshal(b, m, deterministic)
}
func (m *ConnectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ConnectionInfo.Merge(m, src)
}
func (m *ConnectionInfo) XXX_Size() int {
	return xxx_messageInfo_ConnectionInfo.Size(m)
}
func (m *ConnectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ConnectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ConnectionInfo proto.InternalMessageInfo

func (m *ConnectionInfo) GetPodName() string {
	if m != nil {
		return m.PodName
	}
	return ""
}

func (m *ConnectionInfo) GetNsmInterface() string {
	if m != nil {
		return m.NsmInterface
	}
	return ""
}

func (m *ConnectionInfo) GetNsmIP() string {
	if m != nil {
		return m.NsmIP
	}
	return ""
}

func (m *ConnectionInfo) GetNsmPeerIP() string {
	if m != nil {
		return m.NsmPeerIP
	}
	return ""
}

// ClientConnectionInfo - Consolidated client connection information.
// Represents all clients connected to the slice router.
type ClientConnectionInfo struct {
	Connection           []*ConnectionInfo `protobuf:"bytes,1,rep,name=connection,proto3" json:"connection,omitempty"`
	XXX_NoUnkeyedLiteral struct{}          `json:"-"`
	XXX_unrecognized     []byte            `json:"-"`
	XXX_sizecache        int32             `json:"-"`
}

func (m *ClientConnectionInfo) Reset()         { *m = ClientConnectionInfo{} }
func (m *ClientConnectionInfo) String() string { return proto.CompactTextString(m) }
func (*ClientConnectionInfo) ProtoMessage()    {}
func (*ClientConnectionInfo) Descriptor() ([]byte, []int) {
	return fileDescriptor_61b3a38b795a40d5, []int{4}
}

func (m *ClientConnectionInfo) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientConnectionInfo.Unmarshal(m, b)
}
func (m *ClientConnectionInfo) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientConnectionInfo.Marshal(b, m, deterministic)
}
func (m *ClientConnectionInfo) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientConnectionInfo.Merge(m, src)
}
func (m *ClientConnectionInfo) XXX_Size() int {
	return xxx_messageInfo_ClientConnectionInfo.Size(m)
}
func (m *ClientConnectionInfo) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientConnectionInfo.DiscardUnknown(m)
}

var xxx_messageInfo_ClientConnectionInfo proto.InternalMessageInfo

func (m *ClientConnectionInfo) GetConnection() []*ConnectionInfo {
	if m != nil {
		return m.Connection
	}
	return nil
}

func init() {
	proto.RegisterEnum("router.SliceGwHostType", SliceGwHostType_name, SliceGwHostType_value)
	proto.RegisterType((*SidecarResponse)(nil), "router.SidecarResponse")
	proto.RegisterType((*SliceGwConContext)(nil), "router.SliceGwConContext")
	proto.RegisterType((*EcmpUpdateInfo)(nil), "router.EcmpUpdateInfo")
	proto.RegisterType((*ConnectionInfo)(nil), "router.ConnectionInfo")
	proto.RegisterType((*ClientConnectionInfo)(nil), "router.ClientConnectionInfo")
}

func init() { proto.RegisterFile("router_sidecar.proto", fileDescriptor_61b3a38b795a40d5) }

var fileDescriptor_61b3a38b795a40d5 = []byte{
	// 551 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x94, 0xdf, 0x8b, 0xda, 0x40,
	0x10, 0xc7, 0x2f, 0xe7, 0xfd, 0x72, 0x7a, 0x55, 0x6f, 0x6b, 0xed, 0x9e, 0x3d, 0x8a, 0x84, 0x52,
	0xe4, 0x28, 0x11, 0x6c, 0xb9, 0x97, 0x7b, 0x6b, 0x08, 0x36, 0xd4, 0x8a, 0x24, 0xd6, 0x42, 0x29,
	0x48, 0x8c, 0xa3, 0x04, 0xcc, 0x6e, 0xc8, 0xae, 0x77, 0xbd, 0xd7, 0xfe, 0x15, 0x7d, 0xea, 0xdf,
	0x5a, 0xdc, 0x44, 0x4d, 0xd4, 0xfa, 0xb8, 0x9f, 0x99, 0x6f, 0x66, 0xb2, 0xfb, 0x9d, 0x81, 0x6a,
	0xcc, 0x17, 0x12, 0xe3, 0x91, 0x08, 0x26, 0xe8, 0x7b, 0xb1, 0x11, 0xc5, 0x5c, 0x72, 0x72, 0x96,
	0xd0, 0xfa, 0xeb, 0x19, 0xe7, 0xb3, 0x39, 0xb6, 0x14, 0x1d, 0x2f, 0xa6, 0x2d, 0x0c, 0x23, 0xf9,
	0x94, 0x24, 0xe9, 0x2d, 0x28, 0xbb, 0x89, 0xca, 0x41, 0x11, 0x71, 0x26, 0x90, 0xdc, 0x40, 0x51,
	0x48, 0x4f, 0x2e, 0xc4, 0x57, 0x31, 0xa3, 0x5a, 0x43, 0x6b, 0x16, 0x9d, 0x0d, 0xd0, 0xff, 0x16,
	0xe0, 0xca, 0x9d, 0x07, 0x3e, 0x76, 0x1e, 0x4d, 0xce, 0x4c, 0xce, 0x24, 0xfe, 0x92, 0x84, 0xc2,
	0xb9, 0x58, 0x42, 0x7b, 0x92, 0x2a, 0x56, 0x47, 0xf2, 0x0e, 0x4a, 0x73, 0xee, 0x7b, 0xf3, 0x54,
	0x63, 0x4f, 0xe8, 0xb1, 0x4a, 0xd8, 0xa2, 0xe4, 0x3d, 0x5c, 0x65, 0xc9, 0x30, 0x62, 0x76, 0x9f,
	0x16, 0x54, 0xea, 0x6e, 0x80, 0x7c, 0x81, 0x6a, 0x16, 0x7e, 0xe6, 0x42, 0x0e, 0x9e, 0x22, 0xa4,
	0x27, 0x0d, 0xad, 0x59, 0x6a, 0xbf, 0x32, 0x92, 0x5f, 0x37, 0xb6, 0xc2, 0xce, 0x5e, 0x11, 0xf9,
	0x08, 0x2f, 0xb3, 0xbc, 0x27, 0x42, 0x77, 0x31, 0x66, 0x28, 0xe9, 0xa9, 0x2a, 0xbf, 0x3f, 0x48,
	0xee, 0xa0, 0x16, 0x63, 0xc8, 0x25, 0xee, 0xc8, 0xce, 0x94, 0xec, 0x3f, 0x51, 0x72, 0x0b, 0x15,
	0xf5, 0xc1, 0x9e, 0x08, 0x3b, 0x8f, 0x7d, 0xc4, 0xd8, 0xee, 0xd3, 0x73, 0xa5, 0xd8, 0xe1, 0xa4,
	0x9d, 0xfe, 0x66, 0x86, 0x75, 0x03, 0x21, 0xe9, 0x45, 0xa3, 0xd0, 0x2c, 0x3a, 0x7b, 0x63, 0x3a,
	0x83, 0x92, 0xe5, 0x87, 0xd1, 0xb7, 0x68, 0xe2, 0x49, 0xb4, 0xd9, 0x94, 0x1f, 0xe8, 0x54, 0x3b,
	0xd8, 0xe9, 0x5b, 0x78, 0xce, 0x44, 0x68, 0xf7, 0x07, 0xdc, 0xc1, 0x90, 0x3f, 0x20, 0xbd, 0x50,
	0xe9, 0x79, 0xa8, 0xff, 0xd6, 0xa0, 0x64, 0x72, 0xc6, 0xd0, 0x97, 0x01, 0x67, 0xaa, 0x20, 0x85,
	0xf3, 0x88, 0x4f, 0x7a, 0x5e, 0x88, 0x2b, 0x37, 0xa4, 0x47, 0xa2, 0xc3, 0xe5, 0x52, 0xcd, 0x24,
	0xc6, 0x53, 0xcf, 0xc7, 0xd4, 0x0b, 0x39, 0x46, 0xaa, 0x70, 0xaa, 0x2a, 0xa4, 0xaf, 0x9f, 0x1c,
	0x96, 0xae, 0x64, 0x22, 0x4c, 0xef, 0xeb, 0x24, 0x71, 0xe5, 0x1a, 0xe8, 0x3d, 0xa8, 0x9a, 0xf3,
	0x00, 0x99, 0xdc, 0xea, 0xe4, 0x0e, 0xc0, 0x5f, 0x13, 0xaa, 0x35, 0x0a, 0xcd, 0x67, 0xed, 0xda,
	0xca, 0x1d, 0xf9, 0x5c, 0x27, 0x93, 0x79, 0x7b, 0x0f, 0xe5, 0x6d, 0x97, 0xbc, 0x80, 0xb2, 0xdb,
	0xb5, 0x4d, 0x6b, 0xd4, 0xf9, 0x3e, 0x72, 0x2d, 0x67, 0x68, 0x39, 0x95, 0xa3, 0x1c, 0x34, 0xbb,
	0xb6, 0xd5, 0x1b, 0x54, 0xb4, 0xf6, 0x9f, 0x63, 0xb8, 0x56, 0x6a, 0x47, 0xd5, 0x49, 0xe7, 0xcb,
	0xc5, 0xf8, 0x21, 0xf0, 0x91, 0x0c, 0xe1, 0x4d, 0xf2, 0x36, 0x9b, 0x29, 0x4a, 0xab, 0xae, 0x86,
	0xe9, 0x7a, 0xcb, 0xbe, 0x9b, 0x39, 0xab, 0x6f, 0x9c, 0x9d, 0x1f, 0x5a, 0xfd, 0x88, 0xfc, 0x04,
	0xbd, 0x83, 0x32, 0x53, 0x77, 0xef, 0x85, 0xd4, 0x8c, 0x64, 0x1b, 0x18, 0xab, 0x6d, 0x60, 0x58,
	0xcb, 0x6d, 0x50, 0xbf, 0x59, 0x5f, 0xca, 0x1e, 0x95, 0x7e, 0x44, 0x2c, 0xa8, 0x24, 0x5d, 0x2f,
	0xbd, 0xa5, 0xbe, 0x2f, 0xc8, 0xfa, 0x22, 0xf3, 0x7e, 0x3b, 0xd0, 0xe4, 0xa7, 0xcb, 0x1f, 0x60,
	0xb4, 0xee, 0xd3, 0x3d, 0x35, 0x3e, 0x53, 0x4d, 0x7c, 0xf8, 0x17, 0x00, 0x00, 0xff, 0xff, 0xf1,
	0xc2, 0x4e, 0xc2, 0xc0, 0x04, 0x00, 0x00,
}
