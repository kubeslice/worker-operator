syntax = "proto3";

package registry;
option go_package = "github.com/networkservicemesh/api/pkg/api/registry";

import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";

message NetworkService {
    string name = 1;
    string payload = 2;
    repeated Match matches = 3;
}

message Match {
    map<string, string> source_selector = 1;
    repeated Destination routes = 2;
    bool fallthrough = 3;
    Metadata metadata = 4;
}

message Metadata {
    map<string, string> labels = 1;
}

message Destination {
    map<string, string> destination_selector = 1;
    uint32 weight = 2;
}

message NetworkServiceLabels {
    map<string, string> labels = 1;
}

message NetworkServiceEndpoint {
    string name = 1;
    repeated string network_service_names = 2;
    map<string, NetworkServiceLabels> network_service_labels = 3;
    string url = 4;
    google.protobuf.Timestamp expiration_time = 5;
    google.protobuf.Timestamp initial_registration_time = 6;
}

service NetworkServiceEndpointRegistry {
    rpc Register (NetworkServiceEndpoint) returns (NetworkServiceEndpoint);
    rpc Find (NetworkServiceEndpointQuery) returns (stream NetworkServiceEndpointResponse);
    rpc Unregister (NetworkServiceEndpoint) returns (google.protobuf.Empty);
}

service NetworkServiceRegistry {
    rpc Register (NetworkService) returns (NetworkService);
    rpc Find (NetworkServiceQuery) returns (stream NetworkServiceResponse);
    rpc Unregister (NetworkService) returns (google.protobuf.Empty);
}

message NetworkServiceQuery {
    NetworkService network_service = 1;
    bool watch = 2;
}

message NetworkServiceEndpointQuery {
    NetworkServiceEndpoint network_service_endpoint = 1;
    bool watch = 2;
}

message NetworkServiceResponse {
    NetworkService network_service = 1;
    bool deleted = 2;
}

message NetworkServiceEndpointResponse {
    NetworkServiceEndpoint network_service_endpoint = 1;
    bool deleted = 2;
}