apiVersion: v1
kind: Namespace
metadata:
  labels:
    control-plane: controller-manager
  name: kubeslice-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: serviceexports.mesh.avesha.io
spec:
  group: mesh.avesha.io
  names:
    kind: ServiceExport
    listKind: ServiceExportList
    plural: serviceexports
    shortNames:
    - svcex
    singular: serviceexport
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.slice
      name: Slice
      type: string
    - jsonPath: .spec.ingressEnabled
      name: Ingress
      type: boolean
    - jsonPath: .status.exposedPorts
      name: Port(s)
      type: string
    - jsonPath: .status.availableEndpoints
      name: Endpoints
      type: integer
    - jsonPath: .status.exportStatus
      name: Status
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ServiceExport is the Schema for the serviceexports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceExportSpec defines the desired state of ServiceExport
            properties:
              ingressEnabled:
                description: IngressEnabled denotes whether the traffic should be
                  proxied through an ingress gateway
                type: boolean
              meshType:
                description: MeshType denotes the type of service mesh the app pods
                  are part of
                type: string
              ports:
                description: Ports which should be exposed through the service
                items:
                  description: ServicePort is the port exposed by ServicePod
                  properties:
                    containerPort:
                      description: Port number exposed from the container
                      format: int32
                      type: integer
                    name:
                      description: Name of the port
                      type: string
                    protocol:
                      default: TCP
                      description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults
                        to "TCP".
                      type: string
                  required:
                  - containerPort
                  type: object
                type: array
              selector:
                description: Selector is a label query over pods that should be exposed
                  as a service
                properties:
                  matchExpressions:
                    description: matchExpressions is a list of label selector requirements.
                      The requirements are ANDed.
                    items:
                      description: A label selector requirement is a selector that
                        contains values, a key, and an operator that relates the key
                        and values.
                      properties:
                        key:
                          description: key is the label key that the selector applies
                            to.
                          type: string
                        operator:
                          description: operator represents a key's relationship to
                            a set of values. Valid operators are In, NotIn, Exists
                            and DoesNotExist.
                          type: string
                        values:
                          description: values is an array of string values. If the
                            operator is In or NotIn, the values array must be non-empty.
                            If the operator is Exists or DoesNotExist, the values
                            array must be empty. This array is replaced during a strategic
                            merge patch.
                          items:
                            type: string
                          type: array
                      required:
                      - key
                      - operator
                      type: object
                    type: array
                  matchLabels:
                    additionalProperties:
                      type: string
                    description: matchLabels is a map of {key,value} pairs. A single
                      {key,value} in the matchLabels map is equivalent to an element
                      of matchExpressions, whose key field is "key", the operator
                      is "In", and the values array contains only "value". The requirements
                      are ANDed.
                    type: object
                type: object
              slice:
                description: Slice denotes the slice which the app is part of
                type: string
            required:
            - ports
            - selector
            - slice
            type: object
          status:
            description: ServiceExportStatus defines the observed state of ServiceExport
            properties:
              availableEndpoints:
                description: AvailableEndpoints shows the number of available endpoints
                type: integer
              dnsName:
                description: DNSName is the FQDN to reach the service
                type: string
              exportStatus:
                description: ExportStatus denotes the export status of the service
                type: string
              exposedPorts:
                description: ExposedPorts shows a one line representation of ports
                  and protocols exposed only used to show as a printercolumn
                type: string
              lastSync:
                description: Last sync time with backend
                format: int64
                type: integer
              pods:
                description: Pods denotes the service endpoint pods
                items:
                  description: ServicePod contains pod information which offers a
                    service
                  properties:
                    dnsName:
                      description: DNSName is the dns A record name for the pod
                      type: string
                    name:
                      description: Name of the pod
                      type: string
                    nsmIp:
                      description: NsmIP of the pod which is reachable within slice
                      type: string
                    podIp:
                      description: PodIp of the pod which is reachable within cluster
                      type: string
                  required:
                  - dnsName
                  - name
                  - podIp
                  type: object
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: serviceimports.mesh.avesha.io
spec:
  group: mesh.avesha.io
  names:
    kind: ServiceImport
    listKind: ServiceImportList
    plural: serviceimports
    shortNames:
    - svcim
    singular: serviceimport
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .spec.slice
      name: Slice
      type: string
    - jsonPath: .status.exposedPorts
      name: Port(s)
      type: string
    - jsonPath: .status.availableEndpoints
      name: Endpoints
      type: integer
    - jsonPath: .status.importStatus
      name: Status
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: ServiceImport is the Schema for the serviceimports API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: ServiceImportSpec defines the desired state of ServiceImport
            properties:
              dnsName:
                description: DNSName shows the FQDN to reach the service
                type: string
              ports:
                description: Ports which should be exposed through the service
                items:
                  description: ServicePort is the port exposed by ServicePod
                  properties:
                    containerPort:
                      description: Port number exposed from the container
                      format: int32
                      type: integer
                    name:
                      description: Name of the port
                      type: string
                    protocol:
                      default: TCP
                      description: Protocol for port. Must be UDP, TCP, or SCTP. Defaults
                        to "TCP".
                      type: string
                  required:
                  - containerPort
                  type: object
                type: array
              slice:
                description: Slice denotes the slice which the app is part of
                type: string
            required:
            - dnsName
            - ports
            - slice
            type: object
          status:
            description: ServiceImportStatus defines the observed state of ServiceImport
            properties:
              availableEndpoints:
                description: AvailableEndpoints shows the number of available endpoints
                type: integer
              endpoints:
                description: Endpoints which provide the service
                items:
                  description: ServiceEndpoint contains details of a single endpoint
                    which offers a particular service
                  properties:
                    clusterId:
                      description: ClusterID which the endpoint belongs to
                      type: string
                    dnsName:
                      description: DNSName
                      type: string
                    ip:
                      description: IP of the pod which is reachable within slice
                      type: string
                    name:
                      description: Name of the endpoint
                      type: string
                    port:
                      description: Port to reach the endpoint
                      format: int32
                      type: integer
                  required:
                  - clusterId
                  - dnsName
                  - ip
                  - port
                  type: object
                type: array
              exposedPorts:
                description: ExposedPorts shows a one line representation of ports
                  and protocols exposed only used to show as a printercolumn
                type: string
              importStatus:
                description: ImportStatus denotes the status of the imported service
                type: string
              lastSync:
                description: Last sync time with backend
                format: int64
                type: integer
              updatedOn:
                description: Used to match if the service is updated from backend
                format: int64
                type: integer
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: slice.mesh.avesha.io
spec:
  group: mesh.avesha.io
  names:
    kind: Slice
    listKind: SliceList
    plural: slice
    singular: slice
  scope: Namespaced
  versions:
  - name: v1beta1
    schema:
      openAPIV3Schema:
        description: Slice is the Schema for the slice API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SliceSpec defines the desired state of Slice
            type: object
          status:
            description: SliceStatus defines the observed state of Slice
            properties:
              appPods:
                description: AppPods contains the list of app pods connected to the
                  slice
                items:
                  description: AppPod defines the app pods connected to slice
                  properties:
                    nsmInterface:
                      description: NsmInterface is the nsm interface of App
                      type: string
                    nsmIp:
                      description: NsmIP is the nsm ip of App
                      type: string
                    nsmPeerIp:
                      description: PeerIp is the nsm peer ip of gateway
                      type: string
                    podIp:
                      description: PodIP is App Pod IP
                      type: string
                    podName:
                      description: PodName is App Pod Name
                      type: string
                    podNamespace:
                      description: PodNamespace is App Pod Namespace
                      type: string
                  type: object
                type: array
              appPodsUpdatedOn:
                description: AppPodsUpdatedOn is the time when app pods list was updated
                format: int64
                type: integer
              dnsIP:
                description: DNSIP is the IP of Coredns server
                type: string
              sliceConfig:
                description: SliceConfig is the spec for slice received from hub cluster
                properties:
                  externalGatewayConfig:
                    description: ExternalGatewayConfig determines istio ingress/egress
                      configuration
                    properties:
                      egress:
                        properties:
                          enabled:
                            type: boolean
                        type: object
                      gatewayType:
                        type: string
                      ingress:
                        properties:
                          enabled:
                            type: boolean
                        type: object
                      nsIngress:
                        properties:
                          enabled:
                            type: boolean
                        type: object
                    type: object
                  qosProfileDetails:
                    description: QOS profile details
                    properties:
                      bandwidthCeilingKbps:
                        description: Bandwidth Ceiling eg:5000
                        type: integer
                      bandwidthGuaranteedKbps:
                        description: Bandwidth Guaranteed eg:4000
                        type: integer
                      dscpClass:
                        description: DSCP code for inter cluster traffic
                        type: string
                      priority:
                        description: Priority 0-3
                        type: integer
                      queueType:
                        description: Queue Type
                        type: string
                      tcType:
                        description: TC type
                        type: string
                    type: object
                  sliceDisplayName:
                    description: display name of the slice.
                    type: string
                  sliceId:
                    description: UUID of the slice.
                    type: string
                  sliceIpam:
                    description: IPAM configuration for the slice
                    properties:
                      ipamClusterOctet:
                        description: Cluster specific octet for IPAM root subnet
                        type: integer
                      sliceIpamType:
                        description: IPAM Type for slice
                        type: string
                    required:
                    - sliceIpamType
                    type: object
                  sliceSubnet:
                    description: IP subnet range of the slice.
                    type: string
                  sliceType:
                    description: Type of the slice.
                    type: string
                required:
                - qosProfileDetails
                - sliceDisplayName
                - sliceId
                - sliceIpam
                - sliceSubnet
                - sliceType
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.7.0
  creationTimestamp: null
  name: slicegateways.mesh.avesha.io
spec:
  group: mesh.avesha.io
  names:
    kind: SliceGateway
    listKind: SliceGatewayList
    plural: slicegateways
    shortNames:
    - gw
    - slicegw
    singular: slicegateway
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.config.sliceGatewaySubnet
      name: Subnet
      type: string
    - jsonPath: .status.config.sliceGatewayRemoteSubnet
      name: Remote Subnet
      type: string
    - jsonPath: .status.config.sliceGatewayRemoteClusterId
      name: Remote Cluster
      type: string
    - jsonPath: .status.config.sliceGatewayStatus
      name: GW Status
      type: string
    name: v1beta1
    schema:
      openAPIV3Schema:
        description: SliceGateway is the Schema for the slicegateways API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: SliceGatewaySpec defines the desired state of SliceGateway
            properties:
              siteName:
                description: SiteName is site name
                type: string
              sliceName:
                description: SliceName is the Name of the slice this gateway is attached
                  into
                type: string
            type: object
          status:
            description: SliceGatewayStatus defines the observed state of SliceGateway
            properties:
              config:
                description: SliceGatewayConfig defines the config received from backend
                properties:
                  sliceGatewayHostType:
                    description: 'Host Type : server or client'
                    type: string
                  sliceGatewayId:
                    description: UUID of the slice gateway.
                    type: string
                  sliceGatewayLocalVpnIp:
                    description: Local VPN IP
                    type: string
                  sliceGatewayName:
                    description: Slice Gateway Name
                    type: string
                  sliceGatewayNodePort:
                    description: Node port
                    type: integer
                  sliceGatewayRemoteClusterId:
                    description: Remote Cluster ID
                    type: string
                  sliceGatewayRemoteGatewayId:
                    description: Remote Gateway ID
                    type: string
                  sliceGatewayRemoteNodeIp:
                    description: Remote Node IP
                    type: string
                  sliceGatewayRemoteNodePort:
                    description: Remote Node Port
                    type: integer
                  sliceGatewayRemoteSubnet:
                    description: Remote Node Subnet
                    type: string
                  sliceGatewayRemoteVpnIp:
                    description: Remote VPN IP
                    type: string
                  sliceGatewayStatus:
                    description: SliceGateway status
                    type: string
                  sliceGatewaySubnet:
                    description: Slice gateway subnet range.
                    type: string
                  sliceName:
                    description: Name of the slice.
                    type: string
                  sliceSiteName:
                    description: Slice gateway subnet range.
                    type: string
                type: object
              configUpdatedOn:
                description: ConfigUpdatedOn is the time when Config updated from
                  backend
                format: int64
                type: integer
              connectionContextUpdatedOn:
                description: ConnectionContextUpdated is the time when context updated
                  in pod
                format: int64
                type: integer
              localIp:
                description: LocalIP is the gateway tunnel ip
                type: string
              localNsmIp:
                description: LocalNsmIP is the IP on the nsm interface to Slice Router
                type: string
              peerIp:
                description: PeerIP is the gateway tunnel peer ip
                type: string
              podIp:
                description: PodIP is the Ip of the gateway pod running in cluster
                type: string
              podName:
                description: PodName is the name of the gateway pod running in cluster
                type: string
              podStatus:
                description: PodStatus shows whether gateway pod is healthy
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-controller-manager
  namespace: kubeslice-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-forward-plane-acc
  namespace: kubeslice-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-nsc-acc
  namespace: kubeslice-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-nse-acc
  namespace: kubeslice-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: kubeslice-nsmgr-acc
  namespace: kubeslice-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: kubeslice-leader-election-role
  namespace: kubeslice-system
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - get
  - list
  - watch
  - create
  - update
  - patch
  - delete
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  name: kubeslice-manager-role
rules:
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - coordination.k8s.io
  resources:
  - leases
  verbs:
  - create
  - get
  - list
  - update
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mesh.avesha.io
  resources:
  - serviceexports
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mesh.avesha.io
  resources:
  - serviceexports/finalizers
  verbs:
  - update
- apiGroups:
  - mesh.avesha.io
  resources:
  - serviceexports/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - mesh.avesha.io
  resources:
  - serviceimports
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mesh.avesha.io
  resources:
  - serviceimports/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - mesh.avesha.io
  resources:
  - serviceimports/finalizers
  verbs:
  - update
- apiGroups:
  - mesh.avesha.io
  resources:
  - slice
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - mesh.avesha.io
  resources:
  - slice/finalizers
  verbs:
  - update
- apiGroups:
  - mesh.avesha.io
  resources:
  - slice/status
  verbs:
  - get
  - patch
  - update
- apiGroups:
  - networking.istio.io
  resources:
  - gateways
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - serviceentries
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - networking.istio.io
  resources:
  - virtualservices
  verbs:
  - create
  - delete
  - get
  - list
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - rolebindings
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - roles
  verbs:
  - create
  - delete
  - get
  - list
  - patch
  - update
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-metrics-reader
rules:
- nonResourceURLs:
  - /metrics
  verbs:
  - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: kubeslice-proxy-role
rules:
- apiGroups:
  - authentication.k8s.io
  resources:
  - tokenreviews
  verbs:
  - create
- apiGroups:
  - authorization.k8s.io
  resources:
  - subjectaccessreviews
  verbs:
  - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: kubeslice-leader-election-rolebinding
  namespace: kubeslice-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: kubeslice-leader-election-role
subjects:
- kind: ServiceAccount
  name: kubeslice-controller-manager
  namespace: kubeslice-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-manager-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-manager-role
subjects:
- kind: ServiceAccount
  name: kubeslice-controller-manager
  namespace: kubeslice-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: kubeslice-proxy-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: kubeslice-proxy-role
subjects:
- kind: ServiceAccount
  name: kubeslice-controller-manager
  namespace: kubeslice-system
---
apiVersion: v1
data:
  controller_manager_config.yaml: |
    apiVersion: controller-runtime.sigs.k8s.io/v1alpha1
    kind: ControllerManagerConfig
    health:
      healthProbeBindAddress: :8081
    metrics:
      bindAddress: 127.0.0.1:8080
    webhook:
      port: 9443
    leaderElection:
      leaderElect: true
      resourceName: f7425d89.avesha.io
kind: ConfigMap
metadata:
  name: kubeslice-manager-config
  namespace: kubeslice-system
---
apiVersion: v1
data:
  .dockerconfigjson: eyJhdXRocyI6eyJuZXh1cy5kZXYuYXZlc2hhbGFicy5pbyI6eyJ1c2VybmFtZSI6ImF2ZXNoYS1kb2NrZXItcHVsbCIsInBhc3N3b3JkIjoiYFdUUGs5OCtLbmg5flMlQCIsImVtYWlsIjoiYWRtaW5AYXZlc2hhc3lzdGVtcy5jb20iLCJhdXRoIjoiWVhabGMyaGhMV1J2WTJ0bGNpMXdkV3hzT21CWFZGQnJPVGdyUzI1b09YNVRKVUE9In19fQ==
kind: Secret
metadata:
  name: kubeslice-avesha-nexus
  namespace: kubeslice-system
type: kubernetes.io/dockerconfigjson
---
apiVersion: v1
data:
  ca.crt: LS0tLS1CRUdJTiBDRVJUSUZJQ0FURS0tLS0tCk1JSUM1ekNDQWMrZ0F3SUJBZ0lCQURBTkJna3Foa2lHOXcwQkFRc0ZBREFWTVJNd0VRWURWUVFERXdwcmRXSmwKY201bGRHVnpNQjRYRFRJd01URXhNVEV3TkRrMU1Gb1hEVE13TVRFd09URXdORGsxTUZvd0ZURVRNQkVHQTFVRQpBeE1LYTNWaVpYSnVaWFJsY3pDQ0FTSXdEUVlKS29aSWh2Y05BUUVCQlFBRGdnRVBBRENDQVFvQ2dnRUJBT2RBCmJ4eDRKWHh4aGthdUt1bS9tNW9CLzRuQi85MDlETmpTekZzQUpmbTBQS2h4bGs1bDZLMUdLNkRpRlJ0YWZSUjYKbEJsNy9KSDJvL3RUcWRBOU5VQmVEaUhWaHNOMEpaOFV3emcyYStWSlZzZHRSTXFnMmw1b3VhWGNveHRRck9kbQowQ0hxZkFaYlZSSXliMHFLUkVpemJpd0RpZSt2cmVJUGd1eFBiYVFFWUM2NHl0ZWxBQUxvTStHTXJRaHdrZzZkCktqZHl6RGV0THFRVWlNaERkbEM5VmpsY0ZCa1hlbXpWSFAwaWFUNU5JYVZINU9vR2hjU2wvcnRJQlVDZzdBV1UKanRzM2t0RE1UVU1IZU1ITmljU1JoZTdTUUdGVHdWQ2xETWtmdWZmZTlIN20wTmtDdm5iVEhhS0xtbGtGaHZXegp1WW9TaHlPZnhqbG5iZ0Z2ZHdrQ0F3RUFBYU5DTUVBd0RnWURWUjBQQVFIL0JBUURBZ0trTUE4R0ExVWRFd0VCCi93UUZNQU1CQWY4d0hRWURWUjBPQkJZRUZFTzlEVW94ZHljNit0Yzdnbm5Ba1U5SkFOUkhNQTBHQ1NxR1NJYjMKRFFFQkN3VUFBNElCQVFDU2tCVmxqNStXRzNBSGNNNUVReEdmaSsxT0FiRUlmbUNreTkvMllFRGZkV29JbTJDawo0MHNKOGhKV1h6TTd1VVNCM0h6R1YrT05xUTB2dTc5MzZwV0FnUmUvMlJYTFNURzB3bHF4Q3M3YmxyRzVRN3h6CldMekUyNUJxS20rSktNQ2dKTTVyQjIrWFN1aWx3RmVkMzZSNlgzVWk0ZW9IdlpOMVBwY3gyRXRGQy9rNTlKMGYKTVRZdHpEVzhLWFdtVHRodjROaG41RnVLMit6R0JYOS9VTDY1RUFSb0wvZXphSmt2eGl0ZG56SEo2Z2V3MTgrRwpCWlRmU3YvL2pEc2ZQZGZJdVlFWGY0eFlZTFVmMXFpWEw4eTNYRGtCdFRmTndMUmdwRHpoK0JLaG81L0F0b2ZRCmpqOXR6UklqeVBVbkkzYW5jdTlSYzBSRUI1ZHJncTVTMGRVNwotLS0tLUVORCBDRVJUSUZJQ0FURS0tLS0tCg==
  namespace: aHViLWF2ZXNoYS10ZW5hbnQtY2lzY28=
  token: ZXlKaGJHY2lPaUpTVXpJMU5pSXNJbXRwWkNJNklqQllNV05YVTJKd1JIQnNRbTlDYWt0cFJGTkVWMGRtVkc5cVRrTkJjRUpCTFU4M1R6ZEROemRvUVVFaWZRLmV5SnBjM01pT2lKcmRXSmxjbTVsZEdWekwzTmxjblpwWTJWaFkyTnZkVzUwSWl3aWEzVmlaWEp1WlhSbGN5NXBieTl6WlhKMmFXTmxZV05qYjNWdWRDOXVZVzFsYzNCaFkyVWlPaUpvZFdJdFlYWmxjMmhoTFhSbGJtRnVkQzFqYVhOamJ5SXNJbXQxWW1WeWJtVjBaWE11YVc4dmMyVnlkbWxqWldGalkyOTFiblF2YzJWamNtVjBMbTVoYldVaU9pSnJkV0psTFhOc2FXTmxMWE53YjJ0bExXTnNkWE4wWlhJdE1TMTBiMnRsYmkxak5IZHJkQ0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG01aGJXVWlPaUpyZFdKbExYTnNhV05sTFhOd2IydGxMV05zZFhOMFpYSXRNU0lzSW10MVltVnlibVYwWlhNdWFXOHZjMlZ5ZG1salpXRmpZMjkxYm5RdmMyVnlkbWxqWlMxaFkyTnZkVzUwTG5WcFpDSTZJalJrWVdNMU1qWXhMV1JsWXpNdE5ETTVOaTA0TUdFekxXTTJOakZtTm1RMVl6aG1OaUlzSW5OMVlpSTZJbk41YzNSbGJUcHpaWEoyYVdObFlXTmpiM1Z1ZERwb2RXSXRZWFpsYzJoaExYUmxibUZ1ZEMxamFYTmpienByZFdKbExYTnNhV05sTFhOd2IydGxMV05zZFhOMFpYSXRNU0o5LmJ3Z3RTY0FZdlpLdDRtOUEzai1QRnFNd29BdHBCSVcyZFdhaWRuMjlFVTREU2JOc0Y0VFVEVHNWUGZzbXpFVTJSa252bklRQ1lkQnJGLVl6M0JwcUtEV1pSTDJRd21aMkpEb3kwSHFXUjduTW1zNzVOak9lUlJvMzB3NUlMbHp1cDFONXBsclBaMTVLODJvYzdNT0hOR0tzbUVtM3otWlVueUJqMlRXVlIyT0sxU0NjY0ZjSUZCMGxJRGxWVzVfN1JheDNSSWF4ME9MYXQ4U3NXdUV5QV9UeG9vbDlRRjB2SWJqRVpYT2tlbndtdms1am11WWo5NHJmdjZla2FnVkR4OU13a1pvUHkwNXk0dVBQQXdtM0FNZkVTSW5zQ1h2ZlJiS3hCTnVjWm5vNDFtR0hMT0pDeUdYRi1BV2xQbDg2RU5jWWlJU19DeE5ZS1E4VlhnZWtPUQ==
kind: Secret
metadata:
  name: kubeslice-hub-avesha-tenant-token
  namespace: kubeslice-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    control-plane: controller-manager
  name: kubeslice-controller-manager-metrics-service
  namespace: kubeslice-system
spec:
  ports:
  - name: https
    port: 8443
    protocol: TCP
    targetPort: https
  selector:
    control-plane: controller-manager
---
apiVersion: v1
kind: Service
metadata:
  name: kubeslice-webhook-service
  namespace: kubeslice-system
spec:
  ports:
  - port: 443
    targetPort: 9443
  selector:
    control-plane: controller-manager
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    control-plane: controller-manager
  name: kubeslice-operator
  namespace: kubeslice-system
spec:
  replicas: 1
  selector:
    matchLabels:
      control-plane: controller-manager
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: manager
      labels:
        control-plane: controller-manager
    spec:
      containers:
      - args:
        - --secure-listen-address=0.0.0.0:8443
        - --upstream=http://127.0.0.1:8080/
        - --logtostderr=true
        - --v=10
        image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
        name: kube-rbac-proxy
        ports:
        - containerPort: 8443
          name: https
          protocol: TCP
      - args:
        - --health-probe-bind-address=:8081
        - --metrics-bind-address=127.0.0.1:8080
        - --leader-elect
        command:
        - /manager
        env:
        - name: HUB_HOST_ENDPOINT
          value: https://10.1.80.11:6443
        - name: HUB_PROJECT_NAMESPACE
          value: hub-avesha-tenant-cisco
        - name: ENABLE_WEBHOOKS
          value: "false"
        - name: CLUSTER_NAME
          value: cluster-1
        - name: NODE_IP
          value: 1.2.3.4
        image: avesha/kubeslice-operator:1.0.0
        livenessProbe:
          httpGet:
            path: /healthz
            port: 8081
          initialDelaySeconds: 15
          periodSeconds: 20
        name: manager
        readinessProbe:
          httpGet:
            path: /readyz
            port: 8081
          initialDelaySeconds: 5
          periodSeconds: 10
        resources:
          limits:
            cpu: 500m
            memory: 128Mi
          requests:
            cpu: 10m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
        volumeMounts:
        - mountPath: /var/run/secrets/kubernetes.io/hub-serviceaccount
          name: hub-token
          readOnly: true
        - mountPath: /etc/webhook/certs
          name: webhook-certs
          readOnly: true
      securityContext:
        runAsNonRoot: false
      serviceAccountName: kubeslice-controller-manager
      terminationGracePeriodSeconds: 10
      volumes:
      - name: webhook-certs
        secret:
          secretName: kubeslice-admission-webhook-certs
      - name: hub-token
        secret:
          defaultMode: 420
          secretName: kubeslice-hub-avesha-tenant-token
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  name: kubeslice-mutating-webhook-configuration
webhooks:
- admissionReviewVersions:
  - v1
  clientConfig:
    service:
      name: webhook-service
      namespace: system
      path: /mutate-appsv1-deploy
  failurePolicy: Fail
  name: mdeploy.avesha.io
  rules:
  - apiGroups:
    - apps
    apiVersions:
    - v1
    operations:
    - CREATE
    - UPDATE
    resources:
    - deployments
  sideEffects: NoneOnDryRun
